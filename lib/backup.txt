import 'dart:math';

import 'package:azzam_weather_mobile/features/weathers/business/entities/interface_weather_data.dart';
import 'package:azzam_weather_mobile/features/weathers/business/repository/interface_weather_repo.dart';
import 'package:azzam_weather_mobile/features/weathers/presentation/pages/home_page.dart';
import 'package:flutter/material.dart';


class HomePage extends StatefulWidget {
  final InterfaceWeatherData data;
  const HomePage({Key? key, required this.data}) : super(key: key);

  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  // Dummy data for the 24-hour weather forecast
  final List<WeatherForecastHour> hourlyForecast = [
    WeatherForecastHour(hour: '12 AM', temperature: '24°C', icon: Icons.wb_sunny),
    WeatherForecastHour(hour: '1 AM', temperature: '23°C', icon: Icons.cloud),
    WeatherForecastHour(hour: '2 AM', temperature: '22°C', icon: Icons.wb_sunny),
    // Add more data for the remaining hours
  ];

  // Dummy data for the 7-day weather forecast
  final List<WeatherForecastDay> dailyForecast = [
    WeatherForecastDay(day: 'Mon', temperature: '25°C', icon: Icons.wb_sunny),
    WeatherForecastDay(day: 'Tue', temperature: '26°C', icon: Icons.wb_sunny),
    WeatherForecastDay(day: 'Wed', temperature: '23°C', icon: Icons.cloud),
    WeatherForecastDay(day: 'Thu', temperature: '22°C', icon: Icons.cloud),
    WeatherForecastDay(day: 'Fri', temperature: '24°C', icon: Icons.wb_sunny),
    WeatherForecastDay(day: 'Sat', temperature: '27°C', icon: Icons.wb_sunny),
    WeatherForecastDay(day: 'Sun', temperature: '28°C', icon: Icons.wb_sunny),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Weather App'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(
              Icons.wb_sunny,
              size: 100,
              color: Colors.yellow,
            ),
            Text(
              'City Name',
              style: TextStyle(
                fontSize: 24,
                fontWeight: FontWeight.bold,
              ),
            ),
            Text(
              '25°C',
              style: TextStyle(
                fontSize: 48,
              ),
            ),
            Text(
              'Sunny',
              style: TextStyle(
                fontSize: 24,
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Refresh weather data
              },
              child: Text('Refresh Weather'),
            ),
            SizedBox(height: 20),
            Text(
              '24-Hour Forecast',
              style: TextStyle(
                fontSize: 24,
              ),
            ),
            SizedBox(height: 10),
            Container(
              height: 120,
              child: ListView.builder(
                scrollDirection: Axis.horizontal,
                itemCount: hourlyForecast.length,
                itemBuilder: (context, index) {
                  final forecast = hourlyForecast[index];
                  return HourlyForecastCard(
                    hour: forecast.hour,
                    temperature: forecast.temperature,
                    icon: forecast.icon,
                  );
                },
              ),
            ),
            SizedBox(height: 20),
            Text(
              '7-Day Forecast',
              style: TextStyle(
                fontSize: 24,
              ),
            ),
            SizedBox(height: 10),
            // 7-day forecast
            Container(
              height: 120,
              child: ListView.builder(
                scrollDirection: Axis.horizontal,
                itemCount: dailyForecast.length,
                itemBuilder: (context, index) {
                  final forecast = dailyForecast[index];
                  return DailyForecastCard(
                    day: forecast.day,
                    temperature: forecast.temperature,
                    icon: forecast.icon,
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class WeatherForecastHour {
  final String hour;
  final String temperature;
  final IconData icon;

  WeatherForecastHour({
    required this.hour,
    required this.temperature,
    required this.icon,
  });
}

class WeatherForecastDay {
  final String day;
  final String temperature;
  final IconData icon;

  WeatherForecastDay({
    required this.day,
    required this.temperature,
    required this.icon,
  });
}

class HourlyForecastCard extends StatelessWidget {
  final String hour;
  final String temperature;
  final IconData icon;

  HourlyForecastCard({
    required this.hour,
    required this.temperature,
    required this.icon,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      width: 100,
      margin: EdgeInsets.symmetric(horizontal: 10),
      padding: EdgeInsets.all(10),
      decoration: BoxDecoration(
        color: Colors.lightBlue,
        borderRadius: BorderRadius.circular(10),
      ),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Text(hour),
          Icon(icon),
          Text(temperature),
        ],
      ),
    );
  }
}

class DailyForecastCard extends StatelessWidget {
  final String day;
  final String temperature;
  final IconData icon;

  DailyForecastCard({
    required this.day,
    required this.temperature,
    required this.icon,
  });

  @override
  Widget build(BuildContext context) {
    return Container(
      width: 100,
      margin: EdgeInsets.symmetric(horizontal: 10),
      padding: EdgeInsets.all(10),
      decoration: BoxDecoration(
        color: Colors.lightGreen,
        borderRadius: BorderRadius.circular(10),
      ),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Text(day),
          Icon(icon),
          Text(temperature),
        ],
      ),
    );
  }
}
